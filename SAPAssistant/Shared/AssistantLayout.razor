@inherits LayoutComponentBase
@attribute [Authorize]

@inject NavigationManager Navigation
@inject AuthenticationStateProvider AuthStateProvider

@if (isLoading)
{
    <p>Cargando...</p>
}
else
{
    <div class="layout-container dark-mode" @onmousedown="HandleGlobalClick">
        <!-- Menú lateral -->
        <div class="sidebar">
            <NavMenu />
        </div>

        <!-- Contenido principal -->
        <div class="main-area">
            <header class="topbar">
                <div class="title">Synkro Assistant</div>
                <div class="user-profile">
                    <button class="avatar" @onclick="ToggleMenu" @onclick:stopPropagation="true">JK</button>
                    @if (IsMenuOpen)
                    {
                        <div class="user-menu" @onmousedown:stopPropagation="true">
                            <ul>
                                <li>⚙ Configuración</li>
                                <li>🚪 Cerrar sesión</li>
                            </ul>
                        </div>
                    }
                </div>
            </header>

            <!-- Contenido con scroll aislado -->
            <main class="page-content">
                @Body
            </main>
        </div>
    </div>
}

@code {
    private bool IsMenuOpen = false;
    private bool isLoading = true;

    private void ToggleMenu() => IsMenuOpen = !IsMenuOpen;

    private void HandleGlobalClick(MouseEventArgs e)
    {
        if (IsMenuOpen)
        {
            IsMenuOpen = false;
            StateHasChanged();
        }
    }

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (!user.Identity?.IsAuthenticated ?? true)
        {
            Navigation.NavigateTo("/login", true);
        }
        else
        {
            isLoading = false;
        }
    }
}
