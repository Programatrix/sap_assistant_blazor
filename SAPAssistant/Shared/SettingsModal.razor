@using Microsoft.AspNetCore.Components
@inject NavigationManager Navigation

<div class="settings-overlay" @onclick="Close">
    <div class="settings-modal" @onclick:stopPropagation="true">
        <button class="btn-close" @onclick="Close" aria-label="Cerrar">✕</button>

        <div class="settings-content">
            <!-- Panel lateral de pestañas -->
            <div class="tabs">
                @foreach (var tab in Tabs)
                {
                    <div class="tab-item @(ActiveTab == tab ? "active" : "")"
                         @onclick="@(() => SelectTab(tab))">
                        @tab
                    </div>
                }
            </div>

            <!-- Contenido dinámico -->
            <div class="tab-panel">
                @if (ActiveTab == "General")
                {
                    <h3>General</h3>
                    <p>Configuraciones básicas del asistente.</p>
                }
                else if (ActiveTab == "Apariencia")
                {
                    <h3>Apariencia</h3>
                    <p>Opciones de tema, fuente, colores, etc.</p>
                }
                else if (ActiveTab == "Preferencias")
                {
                    <h3>Preferencias</h3>
                    <p>Autocompletado, sugerencias, formato, etc.</p>
                }
                else if (ActiveTab == "Conexiones")
                {
                    <h3>Mis conexiones</h3>
                    <table class="conn-table">
                        <thead>
                            <tr>
                                <th>ID</th>
                                <th>Host</th>
                                <th>Puerto</th>
                                <th>Estado</th>
                                <th>Acciones</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var conn in Connections)
                            {
                                <tr>
                                    <td>@conn.ConnectionId</td>
                                    <td>@conn.Host</td>
                                    <td>@conn.Port</td>
                                    <td>
                                        @if (conn.IsActive)
                                        {
                                            <span><span class="checkmark">✔</span> Activa</span>
                                        }
                                        else
                                        {
                                            <span class="estado-inactivo">—</span>
                                        }
                                    </td>
                                    <td class="acciones">
                                        <button class="edit-button" @onclick="() => EditarConexion(conn.ConnectionId)">Editar</button>
                                        @if (!conn.IsActive)
                                        {
                                            <button class="icon-button" title="Usar esta conexión" @onclick="() => SetActive(conn.ConnectionId)">
                                                <span class="material-icons">check_circle</span>
                                            </button>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>

                    <div class="new-conn-container">
                        <button class="new-conn-btn" @onclick="NuevaConexion">
                            <span class="material-icons">add</span>
                            Nueva conexión
                        </button>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter] public EventCallback OnClose { get; set; }

    private List<string> Tabs = new() { "General", "Apariencia", "Preferencias", "Conexiones" };
    private string ActiveTab = "Conexiones";

    private List<ConnectionItem> Connections = new()
    {
        new ConnectionItem { ConnectionId = "conn_1", Host = "192.168.1.1", Port = "30013", IsActive = true },
        new ConnectionItem { ConnectionId = "conn_2", Host = "10.0.0.2", Port = "30015", IsActive = false }
    };

    private void SelectTab(string tab) => ActiveTab = tab;

    private async Task Close() => await OnClose.InvokeAsync();

    private void SetActive(string connectionId)
    {
        foreach (var conn in Connections)
            conn.IsActive = conn.ConnectionId == connectionId;
    }

    private void EditarConexion(string id)
    {       
        Navigation.NavigateTo($"/connection/edit/{id}",true);
    }

    private void NuevaConexion()
    {
        Navigation.NavigateTo("/connection/edit",true);
    }

    private class ConnectionItem
    {
        public string ConnectionId { get; set; } = "";
        public string Host { get; set; } = "";
        public string Port { get; set; } = "";
        public bool IsActive { get; set; }
    }
}
