@page "/dashboard/catalog"
@attribute [Authorize]
@layout AssistantLayout

@inject KpiCatalogService KpiCatalogService
@inject UserDashboardService UserDashboardService
@inject DashboardService DashboardService

<h1>Catálogo de KPIs</h1>

@if (Catalog == null)
{
    <p>Cargando...</p>
}
else
{
    <div class="dashboard-grid">
        @foreach (var card in Catalog)
        {
            <div class="catalog-card">
                <DashboardCardWrapper Card="card" />
                <button class="btn-add" @onclick="() => AddToDashboard(card)">Añadir a mis dashboards</button>
            </div>
        }
    </div>
}

@code {
    private List<DashboardCardModel> Catalog = new();

    protected override async Task OnInitializedAsync()
    {
        Catalog = await KpiCatalogService.LoadCatalogAsync();
    }

    private async Task AddToDashboard(DashboardCardModel card)
    {
        var copy = new DashboardCardModel
        {
            Id = Guid.NewGuid(),
            Title = card.Title,
            Value = card.Value,
            Description = card.Description,
            IsFixed = card.IsFixed,
            TypeLabel = card.TypeLabel,
            TypeIcon = card.TypeIcon,
            CardType = card.CardType,
            Variation = card.Variation,
            ChartData = card.ChartData != null ? new List<double>(card.ChartData) : null,
            SqlQuery = card.SqlQuery,
            SuggestedChart = card.SuggestedChart,
            DrillDownLevels = card.DrillDownLevels.ToArray(),
            PromptOrigin = card.PromptOrigin,
            Category = card.Category
        };

        DashboardService.KPIs.Add(copy);
        await UserDashboardService.AddKpiAsync(copy);
    }
}
