@page "/dashboard/catalog"
@using SAPAssistant.Models
@using SAPAssistant.Service
@using SAPAssistant.ViewModels
@attribute [Authorize]
@layout AssistantLayout

@inject DashboardCatalogViewModel VM

<h1 class="catalog-title">CatÃ¡logo de KPIs</h1>

@if (VM.Catalog == null)
{
    <div class="loading">Cargando KPIs...</div>
}
else
{
    <div class="kpi-filtros">
        <input type="text" placeholder="Buscar KPIs..." @bind="VM.SearchTerm" />

        <div class="tipo-filtro">
            <label><input type="checkbox" @bind="VM.ShowFijos" /> Fijos</label>
            <label><input type="checkbox" @bind="VM.ShowIA" /> Inteligencia Artificial</label>
        </div>

        <div class="categoria-filtro">
            @foreach (var cat in VM.CategoriasUnicas)
            {
                <label>
                    <input type="checkbox" value="@cat" @onchange="VM.ToggleCategoria" checked="@VM.CategoriasActivas.Contains(cat)" />
                    @cat
                </label>
            }
        </div>
    </div>

    @if (!VM.CatalogFiltrado.Any())
    {
        <div class="empty-message">
            <p>ðŸ˜• No se encontraron KPIs con esos filtros.</p>
        </div>
    }

    <div class="dashboard-grid">
        @foreach (var card in VM.CatalogFiltrado)
        {
            <div class="catalog-card">
                <div class="kpi-header">
                    @if (!string.IsNullOrEmpty(card.TypeLabel))
                    {
                        <span class="kpi-label">ðŸ“Š @card.TypeLabel</span>
                    }
                    <h3>@card.Title</h3>
                </div>

                <DashboardCardWrapper Card="card" ShowTitle="false" />

                @if (card.Variation.HasValue)
                {
                    <span class="variation-indicator @(card.Variation > 0 ? "up" : "down")">
                        @(card.Variation > 0 ? "â†‘" : "â†“") @($"{Math.Abs(card.Variation.Value):0.#}%")
                    </span>
                }

                @if (!string.IsNullOrWhiteSpace(card.Description))
                {
                    <p class="kpi-description">@card.Description</p>
                }

                <div class="card-footer">
                    @if (VM.DashboardService.KPIs.Any(k => k.Id == card.Id))
                    {
                        <button class="btn-added" disabled>âœ“ AÃ±adido</button>
                    }
                    else
                    {
                        <button class="btn-add" @onclick="() => VM.AddToDashboard(card)">âž• AÃ±adir a mis dashboards</button>
                    }
                </div>
            </div>
        }
    </div>
}

@code {
    protected override async Task OnInitializedAsync()
    {
        await VM.InitializeAsync();
    }
}
