@namespace SAPAssistant.Components.Connection
@using SAPAssistant.Models
@using SAPAssistant.ViewModels
@inject ConnectionManagerViewModel VM

<div class="card card-wide">
    <h3 class="text-xl font-semibold mb-4">Mis conexiones</h3>

    @if (!string.IsNullOrEmpty(VM.ErrorAlCargar))
    {
        <div class="alert-error mb-4">
            @VM.ErrorAlCargar
            <br />
            <button class="button-secondary mt-2" @onclick="RecargarConexiones" disabled="@VM.IsActivating">
                üîÑ Reintentar
            </button>
        </div>
    }
    else if (VM.Connections == null || !VM.Connections.Any())
    {
        <p>Cargando conexiones...</p>
    }
    else
    {
        <div class="overflow-x-auto">
            <table class="table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Host</th>
                        <th>Puerto</th>
                        <th>Estado</th>
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var conn in VM.Connections)
                    {
                        <tr>
                            <td>@conn.ConnectionId</td>
                            <td>@conn.Host</td>
                            <td>@conn.Port</td>
                            <td>
                                @if (conn.IsActive)
                                {
                                    <span class="text-green-500">‚úî Activa</span>
                                }
                                else
                                {
                                    <span class="text-muted">‚Äî</span>
                                }
                            </td>
                            <td>
                                <div class="flex gap-2">
                                    <button class="button-secondary" @onclick="() => EditarConexion(conn)" disabled="@VM.IsActivating">
                                        Editar
                                    </button>
                                    @if (!conn.IsActive)
                                    {
                                        <button class="icon-button" title="Usar esta conexi√≥n" @onclick="() => SetActive(conn)" disabled="@VM.IsActivating">
                                            @if (VM.IsActivating && VM.ActivatingConnectionId == conn.ConnectionId)
                                            {
                                                <span class="spinner-border"></span>
                                            }
                                            else
                                            {
                                                <span class="material-icons text-green-500">check_circle</span>
                                            }
                                        </button>
                                    }
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="mt-6 text-right">
            <button class="button-primary" @onclick="NuevaConexion" disabled="@VM.IsActivating">
                <span class="material-icons align-middle">add</span>
                <span class="ml-1">Nueva conexi√≥n</span>
            </button>
        </div>

        @if (VM.MostrarMensaje)
        {
            <div class="alert-success mt-4">
                ‚úÖ Conexi√≥n activada correctamente
            </div>
        }

        @if (VM.MostrarError)
        {
            <div class="alert-error mt-4">
                ‚ùå No se pudo validar la conexi√≥n. Verifica los datos.
            </div>
        }
    }
</div>

@code {
    [Parameter] public bool EsModal { get; set; } = false;
    [Parameter] public EventCallback<bool> OnConnectionActivated { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await VM.LoadConnections();
    }

    private async Task RecargarConexiones()
    {
        await VM.RecargarConexiones();
    }

    private async Task SetActive(ConnectionDTO connection)
    {
        var activated = await VM.SetActive(connection);
        if (activated)
        {
            await OnConnectionActivated.InvokeAsync(true);
        }
    }

    private async Task EditarConexion(ConnectionDTO conn)
    {
        await VM.EditarConexion(conn, EsModal);
    }

    private void NuevaConexion()
    {
        VM.NuevaConexion(EsModal);
    }
}
