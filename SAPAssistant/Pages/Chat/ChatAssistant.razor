@page "/chat-assistant"
@layout ChatLayout
@using Microsoft.AspNetCore.Components.Web
@using SAPAssistant.Service
@using SAPAssistant.Models
@inject IJSRuntime JS
@inject AssistantService AssistantService

<div class="chat-content-full">
    <div class="messages" @ref="messagesContainer">
        @foreach (var msg in Messages)
        {
            <ChatMessage Content="@msg.Content" IsUser="@msg.IsUser" />
        }

        @if (UltimoResultado != null)
        {
            <!-- ✅ Incluimos los resultados DENTRO del área de mensajes -->
            <div class="resultado-panel">
                <h3>🧠 Resumen generado</h3>
                <p>@UltimoResultado.Resumen</p>

                <h4>📄 Consulta SQL generada</h4>
                <pre>@UltimoResultado.Sql</pre>

                <h4>📊 Resultados</h4>

                @if (UltimoResultado.Resultados.Any())
                {
                    <table class="table">
                        <thead>
                            <tr>
                                @foreach (var col in UltimoResultado.Resultados[0].Keys)
                                {
                                    <th>@col</th>
                                }
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var row in UltimoResultado.Resultados)
                            {
                                <tr>
                                    @foreach (var val in row.Values)
                                    {
                                        <td>@val</td>
                                    }
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>No se encontraron resultados.</p>
                }
            </div>
        }
    </div>

    <div class="input-area">
        <SearchBar @bind-SearchText="UserInput" OnSearch="SendMessage" />
    </div>
</div>


<link href="css/chatassistant.css" rel="stylesheet" />
<link href="css/chatmessage.css" rel="stylesheet" />

@code {
    private string UserInput { get; set; } = string.Empty;
    private List<Message> Messages { get; set; } = new();
    private ElementReference messagesContainer;

    private QueryResponse? UltimoResultado = null;

    private async Task SendMessage(string message)
    {
        if (string.IsNullOrWhiteSpace(message)) return;

        Messages.Add(new Message { Content = message, IsUser = true });

        try
        {
            var resultado = await AssistantService.ConsultarAsync(message);

            Messages.Add(new Message
                {
                    IsUser = false,
                    Content = resultado?.Resumen ?? "✅ Consulta ejecutada con éxito."
                });

            UltimoResultado = resultado;
        }
        catch (Exception ex)
        {
            Messages.Add(new Message
                {
                    IsUser = false,
                    Content = $"❌ Error: {ex.Message}"
                });

            UltimoResultado = null;
        }

        await ScrollToBottom();
    }

    private async Task ScrollToBottom()
    {
        await JS.InvokeVoidAsync("chatEnhancer.scrollToBottom", messagesContainer);
    }

    public class Message
    {
        public string Content { get; set; } = string.Empty;
        public bool IsUser { get; set; }
    }
}
