@page "/connection/edit"
@layout PublicLayout
@attribute [Authorize]
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage
@using SAPAssistant.Models
@using SAPAssistant.Service
@inject NavigationManager NavigationManager
@inject ProtectedSessionStorage SessionStorage
@inject ConnectionService ConnectionService
<div class="connection-form-wrapper">
    <h2>@(IsEditMode ? "Editar Conexión" : "Nueva Conexión")</h2>

    <EditForm Model="@connectionData" OnValidSubmit="HandleSave">
        <div class="form-grid">
            <div class="form-group">
                <label>ID de la conexión</label>
                <InputText class="form-input" @bind-Value="connectionData.ConnectionId" disabled="@IsEditMode" />
            </div>

            <div class="form-group">
                <label>Usuario</label>
                <InputText class="form-input" @bind-Value="connectionData.User" />
            </div>

            <div class="form-group">
                <label>Host</label>
                <InputText class="form-input" @bind-Value="connectionData.Host" />
            </div>

            <div class="form-group">
                <label>Contraseña</label>
                <InputText type="password" class="form-input" @bind-Value="connectionData.Password" />
            </div>

            <div class="form-group">
                <label>Puerto</label>
                <InputNumber class="form-input" @bind-Value="connectionData.Port" />
            </div>

            <div class="form-group">
                <label>Esquema (Schema)</label>
                <InputText class="form-input" @bind-Value="connectionData.Schema" />
            </div>

            <div class="form-group">
                <label>Base de Datos</label>
                <InputText class="form-input" @bind-Value="connectionData.Database" />
            </div>
        </div>

        <div class="form-actions">
            <button class="save-button" type="submit">Guardar Cambios</button>
        </div>
    </EditForm>
</div>

@code {
    private ConnectionDTO connectionData = new();
    private string Password = string.Empty;
   
    private bool IsEditMode => !string.IsNullOrWhiteSpace(connectionData.ConnectionId);

    protected override async Task OnInitializedAsync()
    {
        var result = await SessionStorage.GetAsync<ConnectionDTO>("connection_to_edit");
        if (result.Success && result.Value is not null)
        {
            connectionData = result.Value;
            await SessionStorage.DeleteAsync("connection_to_edit");
        }
    }

    private async Task HandleSave()
    {
        bool success;

        if (IsEditMode)
        {
            success = await ConnectionService.UpdateConnectionAsync(connectionData);
        }
        else
        {            
            success = await ConnectionService.CreateConnectionAsync(connectionData);
        }

        if (success)
        {
            NavigationManager.NavigateTo("/");
        }
        else
        {
            Console.WriteLine("❌ Error al guardar la conexión.");
        }
    }


}

