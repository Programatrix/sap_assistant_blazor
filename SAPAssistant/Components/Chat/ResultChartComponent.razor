@using SAPAssistant.Models.Chart
@using SAPAssistant.Models.Chat
@inject IJSRuntime JS

<div class="resultado-panel">
    <h3>ðŸ§  Resumen generado</h3>
    <p>@((MarkupString)M.Resumen)</p>

    <div class="botones-acciones">
        <button class="toggle-sql-btn" @onclick="() => MostrarSql = !MostrarSql">
            @(MostrarSql ? "Ocultar consulta SQL" : "Ver consulta SQL")
        </button>
        <select class="view-select" @onchange="ChangeViewType" value="@M.ViewType">
            <option value="grid">Grid</option>
            <option value="cards">Cards</option>
            <option value="kpi">KPI</option>
            <option value="chart">Chart</option>
        </select>
    </div>

    @if (MostrarSql)
    {
        <div class="sql-block">
            <button class="copy-btn" @onclick="CopiarSql" title="Copiar">ðŸ“‹</button>
            <pre>@M.Sql</pre>
        </div>
    }

    @if (M.ViewType == "chart")
    {
        @if (Config == null)
        {
            <SAPAssistant.Components.Chart.ChartConfigurator Data="M.Data"
                                                             OnChartConfigured="HandleChartConfigured" />
        }
        else
        {
            <InteractiveChartComponent Data="M.Data"
                                       Config="Config" />
        }
    }
    else
    {
        <!-- AquÃ­ podrÃ­as mostrar el grid/cards/kpi si lo deseas -->
    }
</div>

@code {
    [Parameter] public MessageBase Message { get; set; }
    [Parameter] public EventCallback<string> OnViewTypeChange { get; set; }

    private ResultMessage M => (ResultMessage)Message;
    private bool MostrarSql { get; set; }
    private ChartConfig? Config;

    private async Task CopiarSql()
    {
        await JS.InvokeVoidAsync("navigator.clipboard.writeText", M.Sql);
    }

    private async Task ChangeViewType(ChangeEventArgs e)
    {
        var newType = e.Value?.ToString() ?? "grid";
        M.ViewType = newType;

        // Resetear la configuraciÃ³n del grÃ¡fico si se cambia de vista
        if (newType != "chart")
        {
            Config = null;
        }

        await OnViewTypeChange.InvokeAsync(newType);
    }

    private Task HandleChartConfigured(ChartConfig config)
    {
        Config = config;
        return Task.CompletedTask;
    }
}
